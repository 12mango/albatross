# Generated by Django 3.2.9 on 2021-11-26 15:27

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('recruits', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('province', models.TextField(default='', verbose_name='省份')),
                ('city', models.TextField(default='', verbose_name='城市')),
                ('session_key', models.TextField(default='')),
                ('avatar', models.ImageField(default='', upload_to='avatar', verbose_name='头像')),
                ('openid', models.TextField(default='')),
                ('name', models.CharField(default='', max_length=16, verbose_name='姓名')),
                ('sex', models.SmallIntegerField(choices=[(0, 'Secret'), (1, 'Male'), (2, 'Female')], default=0, verbose_name='性别')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('location', models.CharField(default='', max_length=200, verbose_name='居住地')),
                ('phone', models.CharField(default='', max_length=11, verbose_name='电话')),
                ('email', models.CharField(default='', max_length=100, verbose_name='邮箱')),
                ('work_experience', models.TextField(default='', verbose_name='工作经历')),
                ('school', models.TextField(default='', verbose_name='学校')),
                ('qualification', models.IntegerField(choices=[(0, '未知'), (1, '不限'), (2, '小学'), (3, '初中'), (4, '高中'), (5, '中专'), (6, '大专'), (7, '本科'), (8, '硕士'), (9, '博士')], default=0, verbose_name='学历')),
                ('major', models.CharField(default='', max_length=100, verbose_name='专业')),
                ('is_graduate', models.BooleanField(default=False, verbose_name='应届生')),
                ('edu_details', models.TextField(default='', verbose_name='教育经历详情')),
                ('skills', models.TextField(default='', verbose_name='技能')),
                ('training_experience', models.TextField(default='', verbose_name='培训经历')),
                ('personal_experience', models.TextField(default='', verbose_name='个人经历')),
                ('self_evaluate', models.TextField(default='', verbose_name='自我评价')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否激活')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('intention', models.ManyToManyField(blank=True, default=None, related_name='intention', to='recruits.PostTree', verbose_name='求职意向')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'db_table': 'tb_user_info',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
