FORMAT: 1A
HOST: https://albatross.herowharf.cn/

# 信天翁后端API文档

信天翁项目组前后端交互约定

## 测试 [/test]

### 测试服务器工作状态 [GET]
    正常即返回200
    
+ Response 200 (application/json)
        
        []


## 登录 [/login]

### 登录 [POST]
    携带小程序相关参数完成登录

+ Request (application/json)
        
        {
            "ev": "encrypted_data",
            "iv": "initialization vector",
            "code": "code"
        }

+ Response 200 (application/json)
        
        {
            "uid": 用户编号
        }

## 用户信息相关 [/user]
### 获取用户简历信息 [GET /user/getinfo?uid={uid}]

+ Request (application/json)
+ Parameters
    + uid: 1 (number) - "用户编号"
        
+ Response 200 (application/json)

            {
                "name": 姓名,
                "sex": 性别,
                "birth": 生日,
                "location": 居住地,
                "phone": 电话,
                "email":邮箱,
                "work_experience": 工作经历,
                "school": 学校,
                "qualification": 学历,
                "major": 专业,
                "is_graduate": 应届生/毕业生,
                "edu_details": 教育经历详情,
                "skills": 技能,
                "training_experience": 培训经理,
                "personal_experience": 个人经历,
                "self_evaluate": 自我评价,
            }
            
### 设置用户简历信息 [GET /user/setinfo?uid={uid}]
    

+ Request (application/json)

+ Parameters
    + uid: 1 (number) - "用户编号"（其他请求的参数都跟获取用户信息一模一样，我实在懒得复制了qwq）
        
+ Response 200 (application/json)


## 岗位相关 [/post]
### 获取岗位树 [GET /post/tree]
       
+ Request (application/json)
    
        
+ Response 200 (application/json)

        
            {
                "创意/设计": {
                    "美工设计": [
                        "设计",
                        "美工"
                    ],
                    "美化": [
                        "图片处理",
                        "摄影师",
                        "精修美工"
                    ],
                    "互联网设计": [
                        "交互设计",
                        "网页设计制作",
                        "UI设计"
                    ]
                },
                "产品": {
                    "产品": [
                        "产品研发",
                        "产品规划",
                        "电商产品设计"
                    ]
                }
            }

### 获取岗位列表 [GET /post/all/?category={category}]
+ Request (application/json)
+ Parameters
    + category: "产品" (string) - "岗位三级类别"
        
+ Response 200 (application/json)

        
            [
                {
                    "pid":1,
                    "post_name":"岗位名称",
                    "salary":"薪资",
                    "requirement":"岗位要求",
                    "company_name":"公司名称",
                    "location":"办公地点"
                },
                {
                    "pid":2,
                    "post_name":"同上"
                }
            ]
    
### 获取岗位详细信息 [GET /post/info/?pid={pid}]
+ Request (application/json)
+ Parameters
    + pid: 1 (number) - "岗位编号"
        
+ Response 200 (application/json)

            {
                "pid":1,
                "node_3":"岗位类别（三级）",
                "post_name":"岗位名称",
                "salary":"薪资",
                "requirement":"岗位要求",
                "description":"岗位介绍",
                "welfare":"岗位福利",
                "company_name":"公司名称",
                "company_info":"公司信息",
                "location":"办公地点"
            }

### （后端测试用）Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }